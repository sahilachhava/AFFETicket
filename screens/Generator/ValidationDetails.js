import React, { Component } from "react";
import {
    AppRegistry,
    StyleSheet,
    StatusBar,
    TouchableOpacity,
    Dimensions,
    TouchableWithoutFeedback,
    Keyboard,
    Text,
    KeyboardAvoidingView,
    Alert,
} from 'react-native';
import { ScrollView } from "react-native-gesture-handler";

const SCREEN_HEIGHT = Dimensions.get("window").height;
const SCREEN_WIDTH = Dimensions.get("window").width;

const DismissKeyboard = ({ children }) => (
  <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>
    {children}
  </TouchableWithoutFeedback>
);

export default class GValidationDetails extends Component{
    constructor(){
        super()
        this.state = {
          ticketData: ' ',
          redeemTicketNo: '',
          genName: ' ',
          genUsername: ' ',
          btnState: false,
          validated: [],
        }
      }

    static navigationOptions = ({ navigation }) => {
        return{
            title: 'Code Details',
            headerStyle: {
                backgroundColor: '#2c3e50',
            },
            headerTintColor: '#fff',
            headerTitleStyle: {
                fontWeight: 'bold',
                fontSize: SCREEN_WIDTH * 0.05,
                fontFamily: 'Arial',
            },
            headerRight : null,
          }
    }

    componentDidMount(){
      const redeemTicket = this.props.navigation.state.params ? this.props.navigation.state.params.redeemTicket : null;
      if(redeemTicket != null){
          this.setState({
            ticketData: this.props.navigation.state.params.redeemTicket,
            genName: this.props.navigation.state.params.name,
            genUsername: this.props.navigation.state.params.username,
            validated: this.props.navigation.state.params.redeemTicket.validationDetails
          });
      }
    }

    resendCode(){
      Alert.alert("Resend Code","Code resend successfully");
    }

    render(){
        return(
            <DismissKeyboard>
                <KeyboardAvoidingView style={styles.container} behavior={Platform.OS === "ios" ? "position" : null}>
                    <ScrollView>
                        <StatusBar hidden={false} barStyle='light-content' backgroundColor={Platform.OS === "ios" ? null : '#34495e'}/>
                        <TouchableOpacity style={styles.mainBox} activeOpacity={1}>
                            <Text style={styles.displayTicket}>Ticket Code: {this.state.ticketData.ticketCode}</Text>
                            <Text style={styles.displayDetail}>Number: {this.state.ticketData.userNumber}</Text>
                            <Text style={styles.displayDetail}>Total Tickets: {this.state.ticketData.ticketTotal}</Text>
                            <Text style={styles.displayDetail}>Generated By: {this.state.ticketData.generatedBy}</Text>
                            <Text style={styles.displayDetail}>Paid By: {this.state.ticketData.paidBy}</Text>
                            <Text style={styles.displayDetail}>Amount : {this.state.ticketData.ticketAmount}</Text>
                            <TouchableOpacity style={{...styles.btn, backgroundColor: '#e74c3c'}} onPress={()=>this.resendCode()}>
                                <Text style={styles.btnText}>Resend E-Ticket</Text>
                            </TouchableOpacity>
                        </TouchableOpacity>
                    </ScrollView>
                </KeyboardAvoidingView>
            </DismissKeyboard>
        )
    }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'rgba(52, 73, 94,0.8)',
    width: SCREEN_WIDTH,
    height: SCREEN_HEIGHT,
  },
  mainBox: {
    backgroundColor: 'rgba(52, 73, 94,1.0)',
    marginTop: SCREEN_HEIGHT * 0.015,
    width: SCREEN_WIDTH * 0.95,
    height: SCREEN_HEIGHT * 0.6,
    borderRadius: SCREEN_WIDTH * 0.09,
    alignSelf: 'center',
  },
  redeemBox: {
    backgroundColor: 'rgba(52, 73, 94,1.0)',
    marginTop: SCREEN_HEIGHT * 0.015,
    width: SCREEN_WIDTH * 0.95,
    height: SCREEN_HEIGHT * 0.3,
    borderRadius: SCREEN_WIDTH * 0.09,
    alignSelf: 'center',
  },
  displayTicket : {
    color: 'white', 
    fontSize: SCREEN_WIDTH * 0.055, 
    fontWeight:'bold', 
    marginTop: SCREEN_HEIGHT * 0.03, 
    alignSelf: 'center',
    marginBottom: SCREEN_HEIGHT * 0.015,
    textDecorationLine: 'underline',
  },
  displayDetail :{
    color: 'white',
    fontSize: SCREEN_WIDTH * 0.055,
    fontWeight: '700',
    marginTop: SCREEN_HEIGHT * 0.033,
    marginLeft: SCREEN_HEIGHT * 0.02,
  },
  redeemText: {
    fontSize: SCREEN_WIDTH * 0.06,
    width: SCREEN_WIDTH * 0.87,
    height: SCREEN_HEIGHT * 0.065,
    fontWeight: 'bold',
    color: '#ecf0f1',
    textAlign: 'center',
    justifyContent: 'center',
    marginVertical: SCREEN_HEIGHT * 0.02,
  },
  valText: {
    fontSize: SCREEN_WIDTH * 0.05,
    width: SCREEN_WIDTH * 0.87,
    height: SCREEN_HEIGHT * 0.04,
    fontWeight: 'bold',
    color: '#ecf0f1',
    textAlign: 'center',
    justifyContent: 'center',
    marginVertical: SCREEN_HEIGHT * 0.012,
  },
  btn: {
    marginTop: SCREEN_HEIGHT * 0.05,
    width: SCREEN_WIDTH * 0.85,
    height: SCREEN_HEIGHT * 0.07,
    alignSelf: 'center',
    alignItems: 'center',
    borderRadius: SCREEN_WIDTH * 0.09,
  },
  btnText: {
    fontSize: SCREEN_WIDTH * 0.06,
    width: SCREEN_WIDTH * 0.87,
    height: SCREEN_HEIGHT * 0.065,
    fontWeight: 'bold',
    color: 'white',
    textAlign: 'center',
    marginVertical: SCREEN_HEIGHT * 0.015,
  },
});

AppRegistry.registerComponent('GValidationDetails', ()=> GValidationDetails);